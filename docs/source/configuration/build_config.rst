.. _build_config:

Build Config
============

A default :code:`build-config.yaml`` can be generated by executing :code:`.python3 .kaapana/build-scripts/start_build.py` - the template can also be found at :code:`./kaapana/build-scripts/build-config-template.yaml`.

#. Generate default build-config

   :code:`./kaapana/build-scripts/start_build.py`

#. Open the build-configuration file

   :code:`nano kaapana/build-scripts/build-config.yaml`

   .. tabs::

      .. tab:: Build With Remote Registry
         
         We recommend building the project using a registry. If you do not have access to an established registry, we recommend using `Gitlab <https://gitlab.com>`_, which provides a cost-free option to use a private container registry.
         
         .. code-block:: python
            :emphasize-lines: 2

            http_proxy: "" # put the proxy here if needed
            default_registry: "registry.<gitlab-url>/<group-or-user>/<project>" # registry url incl. project Gitlab template: "registry.<gitlab-url>/<group/user>/<project>"
            registry_username: "" # container registry username
            registry_password: "" # container registry password
            container_engine: "docker" # docker or podman
            enable_build_kit: true # Should be false for now: Docker BuildKit: https://docs.docker.com/develop/develop-images/build_enhancements/ 
            log_level: "INFO" # DEBUG, INFO, WARNING or ERROR
            build_only: false # charts and containers will only be build and not pushed to the registry
            create_offline_installation: false # Advanced feature - whether to create a docker dump from which the platform can be deployed offline (file-size ~50GB)
            push_to_microk8s: false # Advanced feature - inject container directly into microk8s after build
            exit_on_error: true  # stop immediately if an issue occurs
            enable_linting: true # should be true - checks deployment validity
            skip_push_no_changes: false # Advanced feature - should be false usually
            platform_filter: "kaapana-admin-chart" # comma seperated platform-chart-names
            external_source_dirs: "" # comma seperated paths
            build_ignore_patterns: "" # comma seperated list of directory paths or files that should be ignored
            parallel_processes: 2 # parallel process count for container build + push 
            include_credentials: false # Whether to include the used registry credentials into the deploy-platform script
            enable_image_stats: false # Whether to enable container image size statistics (build/image_stats.json)
            vulnerability_scan: false # Whether containers should be checked for vulnerabilities during build.
            vulnerability_severity_level: "CRITICAL,HIGH" # Filter by severity of findings. CRITICAL, HIGH, MEDIUM, LOW, UNKNOWN. All -> ""
            configuration_check: false # Wheter the Charts, deployments, dockerfiles etc. should be checked for configuration errors.
            configuration_check_severity_level: "CRITICAL,HIGH" # Filter by severity of findings. CRITICAL, HIGH, MEDIUM, LOW, UNKNOWN. All -> ""
            create_sboms: false # Create Software Bill of Materials (SBOMs) for the built containers.

      .. tab:: Build Without Remote Registry (Local Only)

         Not recommended!

         .. code-block:: python
            :emphasize-lines: 2,8,9

            http_proxy: "" # put the proxy here if needed
            default_registry: "registry.<gitlab-url>/<group-or-user>/<project>" # registry url incl. project Gitlab template: "registry.<gitlab-url>/<group/user>/<project>"
            registry_username: "" # container registry username
            registry_password: "" # container registry password
            container_engine: "docker" # docker or podman
            enable_build_kit: true # Should be false for now: Docker BuildKit: https://docs.docker.com/develop/develop-images/build_enhancements/ 
            log_level: "INFO" # DEBUG, INFO, WARNING or ERROR
            build_only: true # charts and containers will only be build and not pushed to the registry
            create_offline_installation: true # Advanced feature - whether to create a docker dump from which the platform can be deployed offline (file-size ~50GB)
            push_to_microk8s: false # Advanced feature - inject container directly into microk8s after build
            exit_on_error: true  # stop immediately if an issue occurs
            enable_linting: true # should be true - checks deployment validity
            skip_push_no_changes: false # Advanced feature - should be false usually
            platform_filter: "kaapana-admin-chart" # comma seperated platform-chart-names
            external_source_dirs: "" # comma seperated paths
            build_ignore_patterns: "" # comma seperated list of directory paths or files that should be ignored
            parallel_processes: 2 # parallel process count for container build + push 
            include_credentials: false # Whether to include the used registry credentials into the deploy-platform script
            enable_image_stats: false # Whether to enable container image size statistics (build/image_stats.json)
            vulnerability_scan: false # Whether containers should be checked for vulnerabilities during build.
            vulnerability_severity_level: "CRITICAL,HIGH" # Filter by severity of findings. CRITICAL, HIGH, MEDIUM, LOW, UNKNOWN. All -> ""
            configuration_check: false # Wheter the Charts, deployments, dockerfiles etc. should be checked for configuration errors.
            configuration_check_severity_level: "CRITICAL,HIGH" # Filter by severity of findings. CRITICAL, HIGH, MEDIUM, LOW, UNKNOWN. All -> ""
            create_sboms: false # Create Software Bill of Materials (SBOMs) for the built containers.

