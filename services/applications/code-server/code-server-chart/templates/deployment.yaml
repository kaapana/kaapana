{{- $namespace := not .Values.global.namespace | ternary .Values.global.services_namespace .Values.global.namespace | toString }}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: vs-{{ .Values.global.uuid }}
  namespace: "{{ $namespace }}"
  labels:
    k8s-app: code-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app-name: vs-{{ .Values.global.uuid }}
  template:
    metadata:
      labels:
        app-name: vs-{{ .Values.global.uuid }}
    spec:
      securityContext:
        runAsUser: 0
      containers:
      - name: code-server
        {{- if not .Values.global.processing_image }}
        image: "{{ .Values.global.registry_url }}/{{ .Values.global.image }}:{{ .Values.global.kaapana_build_version  }}"
        {{- else }}
        image: "{{ .Values.global.processing_image }}"
        {{- end }}
        imagePullPolicy: {{ .Values.global.pull_policy_pods }}
        command: ["sh", "-c", "code-server --auth none --bind-addr 0.0.0.0:8080 ${WORKSPACE}"]
        env:
        {{- range $envVar := .Values.global.envVars }}
        - name: {{ $envVar.name }}
          value: "{{ $envVar.value }}"
        {{- end }}
        {{- if .Values.global.processing_image }}
        - name: WORKSPACE
          value: "/kaapana"
        {{- else if eq .Values.global.image "podman" }}
        - name: WORKSPACE
          value: "/kaapana/mounted/podman"
        {{- else }}
        - name: WORKSPACE
          value: "/kaapana/mounted/workflows"
        {{- end }}
        {{- if eq .Values.global.image "podman" }}
        - name: http_proxy
          value: {{ .Values.global.http_proxy }}
        - name: https_proxy
          value: {{ .Values.global.http_proxy }}
        {{- end }}
        resources:
          requests:
            memory: 200Mi
          limits:
            memory: 30Gi
        volumeMounts:
          - name: configs
            mountPath: /root/.local/share/code-server/User/keybindings.json
            subPath: keybindings.json
          - name: configs
            mountPath:  /root/.vscode/launch.json
            subPath: launch.json
          - name: configs
            mountPath: /root/.local/share/code-server/User/settings.json
            subPath: settings.json
          {{- range $volumeMount := .Values.global.volumeMounts }}
          - name: {{ $volumeMount.name }}
            mountPath: "{{ $volumeMount.mount_path }}"
          {{- end }}
          {{- if .Values.global.processing_image }}
          - name: dshm
            mountPath: /dev/shm
          {{- end }}
        {{- if eq .Values.global.image "podman" }}
        securityContext:
          privileged: true
        {{- end }}
      volumes:
      - name: configs
        configMap:
          name: vs-config-{{ .Values.global.uuid }}
          items:
          - key: keybindings.json
            path: keybindings.json
          - key: launch.json
            path: launch.json
          - key: user_settings.json
            path: settings.json
      {{- range $volume := .Values.global.volumes }}
      - name: {{ $volume.name }}
        persistentVolumeClaim:
          claimName: {{ $volume.claim_name }}
      {{- end }}
      {{- if .Values.global.processing_image }}
      - name: dshm
        emptyDir:
          medium: Memory
      {{- end }}
      imagePullSecrets:
      - name: registry-secret