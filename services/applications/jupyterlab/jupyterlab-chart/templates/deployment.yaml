{{- $namespace := not .Values.global.namespace | ternary .Values.global.services_namespace .Values.global.namespace | toString }}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: jupyterlab-{{ .Values.global.uuid }}
  namespace: "{{ $namespace }}"
  labels:
    k8s-app: jupyterlab
spec:
  replicas: 1
  selector:
    matchLabels:
      app-name: "jupyterlab-{{ .Values.global.uuid }}"
  template:
    metadata:
      labels:
        app-name: "jupyterlab-{{ .Values.global.uuid }}"
    spec:
      containers:
      - name: jupyterlab
        {{- if not .Values.global.processing_image }}
        image: "{{ .Values.global.registry_url }}/jupyterlab:{{ .Values.global.kaapana_build_version  }}"
        {{- else }}
        image: "{{ .Values.global.processing_image }}"
        {{- end }}
        imagePullPolicy: {{ .Values.global.pull_policy_pods }}
        command: ["/bin/bash"]
        args: ["/jupyterlab.sh"]
        resources:
          requests:
            memory: "100Mi"
          limits:
            memory: "1Gi"
        ports:
        - name: jupyterlab-http
          containerPort: 8888
        env:
        - name: INGRESS_PATH
          value: "/jupyterlab-{{ .Values.global.uuid }}"
        {{- range $envVar := .Values.global.envVars }}
        - name: {{ $envVar.name }}
          value: "{{ $envVar.value }}"
        {{- end }}
        volumeMounts:
          {{- range $volumeMount := .Values.global.volumeMounts }}
          - name: {{ $volumeMount.name }}
            mountPath: "{{ $volumeMount.mount_path }}"
          {{- end }}
          {{- if .Values.global.processing_image }}
          - name: dshm
            mountPath: /dev/shm
          {{- end }}
      volumes:
      {{- range $volume := .Values.global.volumes }}
      - name: {{ $volume.name }}
        persistentVolumeClaim:
          {{- if not (lookup "v1" "PersistentVolumeClaim" $namespace $volume.claim_name ) }}
          claimName: {{ $volume.claim_name }}-pv-claim-{{ $.Values.global.uuid }}
          {{- else }}
          claimName: {{ $volume.claim_name }}
          {{- end }}
      {{- end }}
      {{- if .Values.global.processing_image }}
      - name: dshm
        emptyDir:
          medium: Memory
      {{- end }}
      imagePullSecrets:
      - name: registry-secret