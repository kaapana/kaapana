{{- $namespace := .Values.global.namespace | toString }}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: mitk-flow-{{ .Values.global.uuid }}
  namespace: "{{ $namespace }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app-name: mitk-flow-{{ .Values.global.uuid }}
  template:
    metadata:
      labels:
        app-name: mitk-flow-{{ .Values.global.uuid }}
    spec:
      restartPolicy: Always
      containers:
        # ToDo add init-container to wait for db-host
      - name: mitk
        image: "{{  .Values.global.registry_url }}/mitk-flow:{{ .Values.global.kaapana_build_version  }}"
        imagePullPolicy: {{ .Values.global.pull_policy_images }}
        resources:
          requests:
            memory: "4Gi"
          limits:
            memory: "8Gi"
        env:
        - name: INGRESS_PATH
          value: mitk-flow-{{ .Values.global.uuid }}
        - name: USER
          value: mitk
        - name: PASSWORD
          value: mitk
        - name: WORKFLOW_DIR
          value: "{{ .Values.workflow_dir }}"
        - name: BATCH_NAME
          value: "{{ .Values.batch_name }}"
        - name: OPERATOR_OUT_DIR
          value: "{{ .Values.operator_out_dir }}" 
        - name: OPERATOR_IN_DIR
          value: "{{ .Values.operator_in_dir }}"
        volumeMounts:
          {{- range $volumeMount := .Values.global.volumeMounts }}
          - name: {{ $volumeMount.name }}
            mountPath: "{{ $volumeMount.mount_path }}"
          {{- end }}
      volumes:
      {{- range $volume := .Values.global.volumes }}
      - name: {{ $volume.name }}
        persistentVolumeClaim:
          {{- if not (lookup "v1" "PersistentVolumeClaim" $namespace $volume.claim_name ) }}
          claimName: {{ $volume.claim_name }}-pv-claim-{{ $.Values.global.uuid }}
          {{- else }}
          claimName: {{ $volume.claim_name }}
          {{- end }}
      {{- end }}
      imagePullSecrets:
      - name: registry-secret
