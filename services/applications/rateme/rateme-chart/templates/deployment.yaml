{{- $namespace := not .Values.global.namespace | ternary .Values.global.services_namespace .Values.global.namespace | toString }}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: rateme-{{ .Values.global.uuid }}
  namespace: {{ $namespace }}
  labels:
    k8s-app: rateme
spec:
  replicas: 1
  selector:
    matchLabels:
      app-name: "rateme-{{ .Values.global.uuid }}"
  template:
    metadata:
      labels:
        app-name: "rateme-{{ .Values.global.uuid }}"
    spec:
      # securityContext:
      #   runAsUser: 1000
      containers:
      - name: rateme
        image: "{{ .Values.global.registry_url }}/rateme:{{ .Values.global.kaapana_build_version  }}"
        imagePullPolicy: {{ .Values.global.pull_policy_pods }}
        resources:
          requests:
            memory: "10Mi"
          limits:
            memory: "200Mi"
        ports:
        - name: rateme-http
          containerPort: 8050
        env:
        - name: INGRESS_PATH
          value: "/rateme-{{ .Values.global.uuid }}"
        - name: BATCH_NAME
          value: "{{ .Values.batch_name | default ""}}"
        - name: OPERATOR_OUT_DIR
          value: "{{ .Values.operator_out_dir | default ""}}"
        - name: ANNOTATOR
          value: "{{ .Values.username | default "annotator"}}"
        volumeMounts:
          {{- range $volumeMount := .Values.global.volumeMounts }}
          - name: {{ $volumeMount.name }}
            mountPath: "{{ $volumeMount.mount_path }}"
          {{- end }}
      volumes:
      {{- range $volume := .Values.global.volumes }}
      - name: {{ $volume.name }}
        persistentVolumeClaim:
          {{- if not (lookup "v1" "PersistentVolumeClaim" $namespace $volume.claim_name ) }}
          claimName: {{ $volume.claim_name }}-pv-claim-{{ $.Values.global.uuid }}
          {{- else }}
          claimName: {{ $volume.claim_name }}
          {{- end }}
      {{- end }}
      imagePullSecrets:
      - name: registry-secret