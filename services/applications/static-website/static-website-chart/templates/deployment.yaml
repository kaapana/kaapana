kind: Deployment
apiVersion: apps/v1
metadata:
  name: static-website-{{ .Values.postfix }}
  namespace: "{{ .Values.global.services_namespace }}"
  labels:
    k8s-app: static-website
spec:
  replicas: 1
  selector:
    matchLabels:
      app-name: static-website-{{ .Values.postfix }}
  template:
    metadata:
      labels:
        app-name: static-website-{{ .Values.postfix }}
    spec:
      initContainers:
      - name: static-webiste-copy
        image: "{{ .Values.global.registry_url }}/static-website:{{ .Values.global.kaapana_build_version  }}"
        imagePullPolicy: {{ .Values.global.pull_policy_pods }}
        command: ["/bin/sh"]
        args: ["/kaapana/app/copy.sh"]
        volumeMounts:
          - name: staticwebsiteresults
            mountPath: /usr/share/nginx/html/
      containers:
      - name: static-website
        image: "{{ .Values.global.registry_url }}/static-website:{{ .Values.global.kaapana_build_version  }}"
        imagePullPolicy: {{ .Values.global.pull_policy_pods }}
        resources:
          requests:
            memory: "100Mi"
          limits:
            memory: "500Mi"
        env:
          - name: INGRESS_PATH
            value: "/static-website-{{ .Values.postfix }}"
        volumeMounts:
          - name: staticwebsiteresults
            mountPath: /usr/share/nginx/html/
      volumes:
      - name: staticwebsiteresults
        hostPath:
          {{- if .Values.mount_path }}
          path: {{ .Values.mount_path }}
          {{- else }}
          path: {{ .Values.global.slow_data_dir }}/minio/staticwebsiteresults
          {{- end }}
          type: DirectoryOrCreate
      imagePullSecrets:
      - name: registry-secret
---
kind: Service
apiVersion: v1
metadata:
  name: static-website-{{ .Values.postfix }}
  namespace: "{{ .Values.global.services_namespace }}"
spec:
  selector:
    app-name: static-website-{{ .Values.postfix }}
  ports:
    - protocol: TCP
      port: 80
      name: log-http-port
  type: ClusterIP
--- 
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: static-website-strip-{{ .Values.postfix }}
  namespace: "{{ .Values.global.services_namespace }}"
spec:
  stripPrefix:
    prefixes:
    - /static-website-{{ .Values.postfix }}
    forceSlash: true
---
apiVersion: networking.k8s.io/v1 
kind: Ingress
metadata:
  name: static-website-{{ .Values.postfix }}
  namespace: "{{ .Values.global.services_namespace }}"
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.middlewares: {{  .Values.global.services_namespace  }}-auth-check@kubernetescrd,{{ .Values.global.services_namespace }}-static-website-strip-{{ .Values.postfix }}@kubernetescrd
    traefik.ingress.kubernetes.io/preserve-host: "true"
spec:
  rules:
  - host: 
    http:
      paths:
      - path: /static-website-{{ .Values.postfix }}
        pathType: ImplementationSpecific
        backend:
          service:
            name: static-website-{{ .Values.postfix }}
            port:
              name: log-http-port
---