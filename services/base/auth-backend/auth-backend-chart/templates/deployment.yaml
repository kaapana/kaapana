apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-backend
  namespace: "{{ .Values.global.helm_namespace }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app-name: auth-backend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app-name: auth-backend
    spec:
      initContainers:
        - name: opa-build
          image: "{{ .Values.global.registry_url }}/auth-backend:{{ .Values.global.kaapana_build_version }}"
          command: ["/bin/sh", "-c"]
          args:
            - |
              /kaapana/app/opa build -b /kaapana/app/bundle/ -o /kaapana/app/authz/endpoints.tar.gz
          volumeMounts:
            - name: rego-config
              mountPath: /kaapana/app/authz/
            - name: rego-configmap
              mountPath: /kaapana/app/bundle/httpapi/authz/
      containers:
      - name: auth-backend
        image: "{{ .Values.global.registry_url }}/auth-backend:{{ .Values.global.kaapana_build_version }}"
        imagePullPolicy:  {{ .Values.global.pull_policy_images }}
        env:
          - name: ADMIN_NAMESPACE
            value: "{{ .Values.global.admin_namespace }}"
        ports:
          - containerPort: 5000
        resources:
          limits:
            memory: "100Mi"
          requests:
            memory: "50Mi"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        volumeMounts:
            - name: rego-config
              mountPath: /kaapana/app/authz/
      volumes:
        - name: rego-config
          emptyDir: {}
        - name: rego-configmap
          configMap:
            name: rego-configmap
      priorityClassName: kaapana-high-priority
      imagePullSecrets:
        - name: registry-secret
