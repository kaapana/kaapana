---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-backend
  namespace: "{{ .Values.global.helm_namespace }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app-name: auth-backend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app-name: auth-backend
    spec:
      # initContainers:
      # - name: init-wait-for-opa
      #   image: "{{ .Values.global.registry_url }}/service-checker:{{ .Values.global.kaapana_build_version }}"
      #   imagePullPolicy:  {{ .Values.global.pull_policy_images }}
      #   env:
      #     - name: WAIT
      #       value: "open-policy-agent,open-policy-agent-service.{{  .Values.global.services_namespace  }}.svc,8181"
      #     - name: DELAY
      #       value: "2"
      #     - name: TIMEOUT
      #       value: "10"
      containers:
      - name: auth-backend
        image: "{{ .Values.global.registry_url }}/auth-backend:{{ .Values.global.kaapana_build_version }}"
        imagePullPolicy:  {{ .Values.global.pull_policy_images }}
        ports:
          - containerPort: 5000
        resources:
          limits:
            memory: "100Mi"
          requests:
            memory: "50Mi"
        volumeMounts:
        - name: auth-config
          mountPath: /kaapana/app/auth_role_mapping.json
          subPath: auth_role_mapping.json
        - name: auth-dev
          mountPath: /kaapana/app/main.py
          subPath: main.py
      volumes:
      - name: auth-config
        configMap:
          name: auth-check-config
          items:
          - key: auth_role_mapping.json
            path: auth_role_mapping.json
      - name: auth-dev
        hostPath:
          path: /home/ubuntu/auth-backend-files/
      priorityClassName: kaapana-high-priority
      imagePullSecrets:
        - name: registry-secret
---