"""v0-4-2

Revision ID: 5d694eb1a7b1
Revises:
Create Date: 2025-04-01 14:46:34.115553

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "5d694eb1a7b1"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "identifiers",
        sa.Column("id", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "kaapana_instance",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("instance_name", sa.String(length=64), nullable=True),
        sa.Column("token", sa.String(length=100), nullable=True),
        sa.Column("remote", sa.Boolean(), nullable=True),
        sa.Column("protocol", sa.String(length=64), nullable=True),
        sa.Column("host", sa.String(length=64), nullable=True),
        sa.Column("port", sa.Integer(), nullable=True),
        sa.Column("ssl_check", sa.Boolean(), nullable=True),
        sa.Column("fernet_key", sa.String(length=100), nullable=True),
        sa.Column("encryption_key", sa.String(length=100), nullable=True),
        sa.Column(
            "allowed_dags", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column(
            "allowed_datasets", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("time_created", sa.DateTime(timezone=True), nullable=True),
        sa.Column("time_updated", sa.DateTime(timezone=True), nullable=True),
        sa.Column("automatic_update", sa.Boolean(), nullable=True),
        sa.Column("automatic_workflow_execution", sa.Boolean(), nullable=True),
        sa.Column("workflow_in_which_involved", sa.String(length=64), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("instance_name", "remote", name="_instance_name_remote"),
    )
    op.create_index(
        op.f("ix_kaapana_instance_automatic_update"),
        "kaapana_instance",
        ["automatic_update"],
        unique=False,
    )
    op.create_index(
        op.f("ix_kaapana_instance_automatic_workflow_execution"),
        "kaapana_instance",
        ["automatic_workflow_execution"],
        unique=False,
    )
    op.create_index(
        op.f("ix_kaapana_instance_host"), "kaapana_instance", ["host"], unique=False
    )
    op.create_index(
        op.f("ix_kaapana_instance_port"), "kaapana_instance", ["port"], unique=False
    )
    op.create_index(
        op.f("ix_kaapana_instance_protocol"),
        "kaapana_instance",
        ["protocol"],
        unique=False,
    )
    op.create_index(
        op.f("ix_kaapana_instance_remote"), "kaapana_instance", ["remote"], unique=False
    )
    op.create_index(
        op.f("ix_kaapana_instance_ssl_check"),
        "kaapana_instance",
        ["ssl_check"],
        unique=False,
    )
    op.create_index(
        op.f("ix_kaapana_instance_workflow_in_which_involved"),
        "kaapana_instance",
        ["workflow_in_which_involved"],
        unique=False,
    )
    op.create_table(
        "dataset",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=64), nullable=True),
        sa.Column("username", sa.String(length=64), nullable=True),
        sa.Column("time_created", sa.DateTime(timezone=True), nullable=True),
        sa.Column("time_updated", sa.DateTime(timezone=True), nullable=True),
        sa.Column("kaapana_id", sa.Integer(), nullable=True),
        sa.Column("project_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["kaapana_id"],
            ["kaapana_instance.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("project_id", "name"),
    )
    op.create_index(op.f("ix_dataset_name"), "dataset", ["name"], unique=False)
    op.create_table(
        "settings",
        sa.Column(
            "id",
            sa.Integer(),
            sa.Identity(always=False, start=1, cycle=True),
            nullable=False,
        ),
        sa.Column("username", sa.String(length=64), nullable=True),
        sa.Column("instance_name", sa.String(length=64), nullable=True),
        sa.Column("key", sa.String(length=64), nullable=True),
        sa.Column("value", sa.JSON(), nullable=True),
        sa.Column("time_created", sa.DateTime(timezone=True), nullable=True),
        sa.Column("time_updated", sa.DateTime(timezone=True), nullable=True),
        sa.Column("kaapana_instance_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["kaapana_instance_id"],
            ["kaapana_instance.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "username", "instance_name", "key", name="uq_username_instance_key"
        ),
    )
    op.create_table(
        "workflow",
        sa.Column("workflow_id", sa.String(length=64), nullable=False),
        sa.Column("workflow_name", sa.String(length=64), nullable=True),
        sa.Column("dag_id", sa.String(length=64), nullable=True),
        sa.Column("username", sa.String(length=64), nullable=True),
        sa.Column("time_created", sa.DateTime(timezone=True), nullable=True),
        sa.Column("time_updated", sa.DateTime(timezone=True), nullable=True),
        sa.Column("automatic_execution", sa.Boolean(), nullable=True),
        sa.Column("service_workflow", sa.Boolean(), nullable=True),
        sa.Column("federated", sa.Boolean(), nullable=True),
        sa.Column("project_id", sa.Integer(), nullable=True),
        sa.Column("kaapana_id", sa.Integer(), nullable=True),
        sa.Column("involved_kaapana_instances", sa.String(length=51200), nullable=True),
        sa.ForeignKeyConstraint(
            ["kaapana_id"],
            ["kaapana_instance.id"],
        ),
        sa.PrimaryKeyConstraint("workflow_id"),
    )
    op.create_index(
        op.f("ix_workflow_automatic_execution"),
        "workflow",
        ["automatic_execution"],
        unique=False,
    )
    op.create_index(
        op.f("ix_workflow_federated"), "workflow", ["federated"], unique=False
    )
    op.create_index(
        op.f("ix_workflow_involved_kaapana_instances"),
        "workflow",
        ["involved_kaapana_instances"],
        unique=False,
    )
    op.create_index(
        op.f("ix_workflow_service_workflow"),
        "workflow",
        ["service_workflow"],
        unique=False,
    )
    op.create_table(
        "identifier2dataset",
        sa.Column("identifier", sa.String(), nullable=False),
        sa.Column("dataset", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["dataset"],
            ["dataset.id"],
        ),
        sa.ForeignKeyConstraint(
            ["identifier"],
            ["identifiers.id"],
        ),
        sa.PrimaryKeyConstraint("identifier", "dataset"),
    )
    op.create_table(
        "job",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("dag_id", sa.String(length=64), nullable=True),
        sa.Column("external_job_id", sa.Integer(), nullable=True),
        sa.Column("owner_kaapana_instance_name", sa.String(length=64), nullable=True),
        sa.Column("conf_data", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("status", sa.String(length=64), nullable=True),
        sa.Column("run_id", sa.String(length=64), nullable=True),
        sa.Column("description", sa.String(length=1024000), nullable=True),
        sa.Column("username", sa.String(length=64), nullable=True),
        sa.Column("time_created", sa.DateTime(timezone=True), nullable=True),
        sa.Column("time_updated", sa.DateTime(timezone=True), nullable=True),
        sa.Column("automatic_execution", sa.Boolean(), nullable=True),
        sa.Column("service_job", sa.Boolean(), nullable=True),
        sa.Column("kaapana_id", sa.Integer(), nullable=True),
        sa.Column("workflow_id", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["kaapana_id"],
            ["kaapana_instance.id"],
        ),
        sa.ForeignKeyConstraint(
            ["workflow_id"],
            ["workflow.workflow_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_job_automatic_execution"), "job", ["automatic_execution"], unique=False
    )
    op.create_index(op.f("ix_job_description"), "job", ["description"], unique=False)
    op.create_index(op.f("ix_job_run_id"), "job", ["run_id"], unique=False)
    op.create_index(op.f("ix_job_service_job"), "job", ["service_job"], unique=False)
    op.create_index(op.f("ix_job_status"), "job", ["status"], unique=False)
    op.create_index(
        "ix_kaapana_id_workflow_id_external_job_id",
        "job",
        ["kaapana_id", "workflow_id", "external_job_id"],
        unique=True,
        postgresql_where=sa.text("external_job_id IS NOT NULL"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        "ix_kaapana_id_workflow_id_external_job_id",
        table_name="job",
        postgresql_where=sa.text("external_job_id IS NOT NULL"),
    )
    op.drop_index(op.f("ix_job_status"), table_name="job")
    op.drop_index(op.f("ix_job_service_job"), table_name="job")
    op.drop_index(op.f("ix_job_run_id"), table_name="job")
    op.drop_index(op.f("ix_job_description"), table_name="job")
    op.drop_index(op.f("ix_job_automatic_execution"), table_name="job")
    op.drop_table("job")
    op.drop_table("identifier2dataset")
    op.drop_index(op.f("ix_workflow_service_workflow"), table_name="workflow")
    op.drop_index(op.f("ix_workflow_involved_kaapana_instances"), table_name="workflow")
    op.drop_index(op.f("ix_workflow_federated"), table_name="workflow")
    op.drop_index(op.f("ix_workflow_automatic_execution"), table_name="workflow")
    op.drop_table("workflow")
    op.drop_table("settings")
    op.drop_index(op.f("ix_dataset_name"), table_name="dataset")
    op.drop_table("dataset")
    op.drop_index(
        op.f("ix_kaapana_instance_workflow_in_which_involved"),
        table_name="kaapana_instance",
    )
    op.drop_index(op.f("ix_kaapana_instance_ssl_check"), table_name="kaapana_instance")
    op.drop_index(op.f("ix_kaapana_instance_remote"), table_name="kaapana_instance")
    op.drop_index(op.f("ix_kaapana_instance_protocol"), table_name="kaapana_instance")
    op.drop_index(op.f("ix_kaapana_instance_port"), table_name="kaapana_instance")
    op.drop_index(op.f("ix_kaapana_instance_host"), table_name="kaapana_instance")
    op.drop_index(
        op.f("ix_kaapana_instance_automatic_workflow_execution"),
        table_name="kaapana_instance",
    )
    op.drop_index(
        op.f("ix_kaapana_instance_automatic_update"), table_name="kaapana_instance"
    )
    op.drop_table("kaapana_instance")
    op.drop_table("identifiers")
    # ### end Alembic commands ###
