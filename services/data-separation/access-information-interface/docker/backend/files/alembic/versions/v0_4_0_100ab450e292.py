"""v0-4-0

Revision ID: 100ab450e292
Revises:
Create Date: 2025-04-02 09:03:03.197438

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "100ab450e292"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "projects",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("external_id", sa.String(), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("kubernetes_namespace", sa.String(), nullable=True),
        sa.Column("s3_bucket", sa.String(), nullable=True),
        sa.Column("opensearch_index", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("kubernetes_namespace"),
        sa.UniqueConstraint("name"),
        sa.UniqueConstraint("opensearch_index"),
        sa.UniqueConstraint("s3_bucket"),
    )
    op.create_table(
        "rights",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("claim_key", sa.String(), nullable=False),
        sa.Column("claim_value", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "roles",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "roles_rights",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("role_id", sa.Integer(), nullable=True),
        sa.Column("right_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["right_id"],
            ["rights.id"],
        ),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["roles.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("role_id", "right_id"),
    )

    op.create_table(
        "users_projects_roles",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("project_id", sa.Integer(), nullable=True),
        sa.Column("role_id", sa.Integer(), nullable=True),
        sa.Column("keycloak_id", sa.String(length=36), nullable=False),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects.id"],
        ),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["roles.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("project_id", "role_id", "keycloak_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("users_projects_roles")
    op.drop_table("roles_rights")
    op.drop_table("roles")
    op.drop_table("rights")
    op.drop_table("projects")
    # ### end Alembic commands ###
