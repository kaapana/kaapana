apiVersion: v1
kind: Secret
metadata:
  name: "access-information-point-postgres-password"
  namespace: "{{ .Values.global.services_namespace }}"
type: Opaque
data:
  # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace "access-information-point-postgres-password") | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  # set $jwtSecret to existing secret data or generate a random one when not exists
  {{- $alphaNum := ( randAlphaNum 28 ) }}
  {{- $special := ( trunc 4 ( shuffle "!ยง$%&/()=?-+[]^")) }}
  {{- $password := (shuffle ( nospace ( cat $alphaNum $special ))) }}
  {{- $mySecret := (get $secretData "access-information-point-postgres-password") | default ( $password | b64enc) }}
  access-information-point-postgres-password: {{ $mySecret | quote }}
