---
#  Licensed to the Apache Software Foundation (ASF) under one   *
#  or more contributor license agreements.  See the NOTICE file *
#  distributed with this work for additional information        *
#  regarding copyright ownership.  The ASF licenses this file   *
#  to you under the Apache License, Version 2.0 (the            *
#  "License"); you may not use this file except in compliance   *
#  with the License.  You may obtain a copy of the License at   *
#          
#    http://www.apache.org/licenses/LICENSE-2.0                 *
#                                                               *
#  Unless required by applicable law or agreed to in writing,   *
#  software distributed under the License is distributed on an  *
#  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY       *
#  KIND, either express or implied.  See the License for the    *
#  specific language governing permissions and limitations      *
#  under the License.                                           *
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-rbac
  namespace: {{ .Values.global.flow_namespace }}
subjects:
  - kind: ServiceAccount
    # Reference to upper's `metadata.name`
    name: default
    # Reference to upper's `metadata.namespace`
    # namespace: default
    namespace: {{ .Values.global.flow_namespace }}
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-rbac-jobs
  namespace: {{ .Values.global.flow_namespace }}
subjects:
  - kind: ServiceAccount
    # Reference to upper's `metadata.name`
    name: default
    # Reference to upper's `metadata.namespace`
    # namespace: default
    namespace: {{ .Values.global.flow_namespace }}-jobs
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow
  namespace: {{ .Values.global.flow_namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app-name: airflow
  template:
    metadata:
      labels:
        app-name: airflow
    spec:
      initContainers:
      - name: service-kaapana-plugin-check
        image: {{  .Values.global.registry_url }}/service_checker:1.1
        imagePullPolicy: {{ .Values.global.pull_policy_jobs }}
        env:
        - name: WAIT
          value: "postgres,postgres-airflow,5432;prometheus,prometheus-service.monitoring.svc,9090"
        - name: DELAY
          value: "5"
        - name: FILES_AND_FOLDERS_EXISTS
          value: "/root/airflow/plugins/kaapana"
        volumeMounts:
        - name: airflow-plugins
          mountPath: /root/airflow/plugins
      - name: init-airflow-db
        image: {{  .Values.global.registry_url }}/airflow:2.2.2
        imagePullPolicy:  {{ .Values.global.pull_policy_pods }}
        args: ["init"]
        resources:
          requests:
            memory: 250Mi
          limits:
            memory: 250Mi
        volumeMounts:
        - name: airflow-configmap
          mountPath: /root/airflow/airflow.cfg
          subPath: airflow.cfg
        - name: airflow-webserver-config
          mountPath: /root/airflow/webserver_config.py
          subPath: webserver_config.py
        - name: airflow-dags
          mountPath: /root/airflow/dags
        - name: airflow-plugins
          mountPath: /root/airflow/plugins
        env:
        - name: AIRFLOW_HOME
          value: "/root/airflow"
        - name: SQL_ALCHEMY_CONN
          valueFrom:
            secretKeyRef:
              name: airflow-secrets
              key: sql_alchemy_conn
      containers:
      - name: webserver
        image: {{  .Values.global.registry_url }}/airflow:2.2.2
        imagePullPolicy:  {{ .Values.global.pull_policy_pods }}
        ports:
        - name: webserver
          containerPort: 8080
        args: ["webserver"]
        env:
        - name: AIRFLOW_HOME
          value: "/root/airflow"
        - name: DATADIR
          value: {{ .Values.global.fast_data_dir }}/workflows/data
        - name: MODELDIR
          value: {{ .Values.global.fast_data_dir }}/workflows/models
        - name: HOSTDOMAIN
          value: {{ .Values.global.hostname }}
        - name: AIRFLOW_KUBE_NAMESPACE
          value: {{ .Values.global.flow_namespace }}
        - name: SQL_ALCHEMY_CONN
          valueFrom:
            secretKeyRef:
              name: airflow-secrets
              key: sql_alchemy_conn
{{- if .Values.global.http_proxy }}
        - name: http_proxy
          value: {{ .Values.global.http_proxy }}
{{- end }}
{{- if .Values.global.https_proxy }}
        - name: https_proxy
          value: {{ .Values.global.https_proxy }}
{{- end }}
        resources:
          requests:
            memory: 600Mi
          limits:
            memory: 3000Mi
        volumeMounts:
        - name: airflow-configmap
          mountPath: /root/airflow/airflow.cfg
          subPath: airflow.cfg
        - name: airflow-webserver-config
          mountPath: /root/airflow/webserver_config.py
          subPath: webserver_config.py
        - name: airflow-dags
          mountPath: /root/airflow/dags
        - name: airflow-plugins
          mountPath: /root/airflow/plugins
        - name: airflow-logs
          mountPath: /root/airflow/logs
        - name: modeldata
          mountPath: /models
        # readinessProbe:
        #   initialDelaySeconds: 120
        #   timeoutSeconds: 5
        #   periodSeconds: 5
        #   httpGet:
        #     path: /flow/kaapana/api/getdags
        #     port: 8080
        # livenessProbe:
        #   initialDelaySeconds: 300
        #   periodSeconds: 120
        #   timeoutSeconds: 5
        #   failureThreshold: 5
        #   httpGet:
        #     path: /flow
        #     port: 8080
      - name: scheduler
        image: {{  .Values.global.registry_url }}/airflow:2.2.2
        imagePullPolicy:  {{ .Values.global.pull_policy_pods }}
        args: ["scheduler"]
        env:
        - name: DEFAULT_REGISTRY
          value: "{{  .Values.global.registry_url }}"
        - name: AIRFLOW_HOME
          value: "/root/airflow"
        - name: DATADIR
          value: {{ .Values.global.fast_data_dir }}/workflows/data
        - name: MODELDIR
          value: {{ .Values.global.fast_data_dir }}/workflows/models
        - name: PROXY
          value: {{ .Values.global.http_proxy }}
        - name: HOSTDOMAIN
          value: {{ .Values.global.hostname }}
        - name: PULL_POLICY_PODS
          value: {{  .Values.global.pull_policy_pods }}
        - name: MINIOUSER
          value: {{ .Values.global.credentials.minio_username }}
        - name: MINIOPASSWORD
          value: {{ .Values.global.credentials.minio_password }}
        - name: AIRFLOW_KUBE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: SQL_ALCHEMY_CONN
          valueFrom:
            secretKeyRef:
              name: airflow-secrets
              key: sql_alchemy_conn
        resources:
          requests:
            memory: 2500Mi
          limits:
            memory: 20000Mi
        volumeMounts:
        - name: airflow-configmap
          mountPath: /root/airflow/airflow.cfg
          subPath: airflow.cfg
        - name: airflow-webserver-config
          mountPath: /root/airflow/webserver_config.py
          subPath: webserver_config.py
        - name: airflow-dags
          mountPath: /root/airflow/dags
        - name: airflow-logs
          mountPath: /root/airflow/logs
        - name: airflow-plugins
          mountPath: /root/airflow/plugins
        - name: modeldata
          mountPath: /models
        - name: ctpinput
          mountPath: /ctpinput
        - name: workflowdata
          mountPath: /data
        - name: dicomdir
          mountPath: /pacsdata
      volumes:
      - name: airflow-configmap
        configMap:
          name: airflow-configmap
      - name: airflow-webserver-config
        configMap:
          name: airflow-webserver-config
      - name: airflow-dags
        hostPath:
          path: {{ .Values.global.fast_data_dir }}/workflows/dags
          type: DirectoryOrCreate
      - name: airflow-logs
        hostPath:
          path: {{ .Values.global.fast_data_dir }}/airflow/logs
          type: DirectoryOrCreate
      - name: airflow-plugins
        hostPath:
          path: {{ .Values.global.fast_data_dir }}/workflows/plugins
          type: DirectoryOrCreate
      - name: modeldata
        hostPath:
          path: {{ .Values.global.fast_data_dir }}/workflows/models
          type: DirectoryOrCreate
      - name: ctpinput
        hostPath:
          path: {{ .Values.global.fast_data_dir }}/ctp/incoming
          type: DirectoryOrCreate
      - name: workflowdata
        hostPath:
          path: {{ .Values.global.fast_data_dir }}/workflows/data
          type: DirectoryOrCreate
      - name: dicomdir
        hostPath:
          path: {{ .Values.global.slow_data_dir }}/dcm4che/dicom_data
          type: DirectoryOrCreate
      imagePullSecrets:
      - name: registry-secret
---                                                