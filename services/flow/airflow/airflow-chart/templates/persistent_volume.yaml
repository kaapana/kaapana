# Dags
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: dags-pv-volume
  labels:
    type: local
spec:
  capacity:
    storage: "1Mi"
{{- if .Values.global.enable_nfs }}
  storageClassName: nfs
  accessModes:
    - ReadWriteMany
  nfs:
    server: "10.152.183.15"
    path: "/workflows/dags"
{{- else }}
  storageClassName: host-dir
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "{{ .Values.global.fast_data_dir }}/workflows/dags"
{{- end }}
  persistentVolumeReclaimPolicy: Retain
  claimRef:
    namespace: "{{ .Values.global.services_namespace }}"
    name: dags-pv-claim
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dags-pv-claim
  namespace: "{{ .Values.global.services_namespace }}"
spec:
  storageClassName: nfs
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: "1Mi"
  volumeName: "dags-pv-volume"
---
# logs
apiVersion: v1
kind: PersistentVolume
metadata:
  name: af-logs-pv-volume
  labels:
    type: local
spec:
  capacity:
    storage: "1Mi"
{{- if .Values.global.enable_nfs }}
  storageClassName: nfs
  accessModes:
    - ReadWriteMany
  nfs:
    server: "10.152.183.15"
    path: "/airflow/logs"
{{- else }}
  storageClassName: host-dir
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "{{ .Values.global.fast_data_dir }}/airflow/logs"
{{- end }}
  persistentVolumeReclaimPolicy: Retain
  claimRef:
    namespace: "{{ .Values.global.services_namespace }}"
    name: af-logs-pv-claim
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: af-logs-pv-claim
  namespace: "{{ .Values.global.services_namespace }}"
spec:
  storageClassName: nfs
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: "1Mi"
  volumeName: "af-logs-pv-volume"
---
# plugins
apiVersion: v1
kind: PersistentVolume
metadata:
  name: af-plugins-pv-volume
  labels:
    type: local
spec:
  capacity:
    storage: "1Mi"
{{- if .Values.global.enable_nfs }}
  storageClassName: nfs
  accessModes:
    - ReadWriteMany
  nfs:
    server: "10.152.183.15"
    path: "/workflows/plugins"
{{- else }}
  storageClassName: host-dir
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "{{ .Values.global.fast_data_dir }}/workflows/plugins"
{{- end }}
  persistentVolumeReclaimPolicy: Retain
  claimRef:
    namespace: "{{ .Values.global.services_namespace }}"
    name: af-plugins-pv-claim
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: af-plugins-pv-claim
  namespace: "{{ .Values.global.services_namespace }}"
spec:
  storageClassName: nfs
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: "1Mi"
  volumeName: "af-plugins-pv-volume"
---
# models
apiVersion: v1
kind: PersistentVolume
metadata:
  name: models-pv-volume
  labels:
    type: local
spec:
  capacity:
    storage: "1Mi"
{{- if .Values.global.enable_nfs }}
  storageClassName: nfs
  accessModes:
    - ReadWriteMany
  nfs:
    server: "10.152.183.15"
    path: "/workflows/models"
{{- else }}
  storageClassName: host-dir
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "{{ .Values.global.fast_data_dir }}/workflows/models"
{{- end }}
  persistentVolumeReclaimPolicy: Retain
  claimRef:
    namespace: "{{ .Values.global.services_namespace }}"
    name: models-pv-claim
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: models-pv-claim
  namespace: "{{ .Values.global.services_namespace }}"
spec:
  storageClassName: nfs
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: "1Mi"
  volumeName: "models-pv-volume"
---
# data-services
apiVersion: v1
kind: PersistentVolume
metadata:
  name: af-data-pv-volume
  labels:
    type: local
spec:
  capacity:
    storage: "1Mi"
{{- if .Values.global.enable_nfs }}
  storageClassName: nfs
  accessModes:
    - ReadWriteMany
  nfs:
    server: "10.152.183.15"
    path: "/workflows/data"
{{- else }}
  storageClassName: host-dir
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "{{ .Values.global.fast_data_dir }}/workflows/data"
{{- end }}
  persistentVolumeReclaimPolicy: Retain
  claimRef:
    namespace: "{{ .Values.global.services_namespace }}"
    name: af-data-pv-claim
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: af-data-pv-claim
  namespace: "{{ .Values.global.services_namespace }}"
spec:
  storageClassName: nfs
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: "1Mi"
  volumeName: "af-data-pv-volume"
---
# mounted-scripts-services
apiVersion: v1
kind: PersistentVolume
metadata:
  name: ms-pv-volume
  labels:
    type: local
spec:
  capacity:
    storage: "1Mi"
{{- if .Values.global.enable_nfs }}
  storageClassName: nfs
  accessModes:
    - ReadWriteMany
  nfs:
    server: "10.152.183.15"
    path: "/workflows/mounted_scripts"
{{- else }}
  storageClassName: host-dir
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "{{ .Values.global.fast_data_dir }}/workflows/mounted_scripts"
{{- end }}
  persistentVolumeReclaimPolicy: Retain
  claimRef:
    namespace: "{{ .Values.global.services_namespace }}"
    name: ms-pv-claim
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ms-pv-claim
  namespace: "{{ .Values.global.services_namespace }}"
spec:
  storageClassName: nfs
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: "1Mi"
  volumeName: "ms-pv-volume"
---
