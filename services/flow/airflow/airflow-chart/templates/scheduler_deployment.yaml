---
#  Licensed to the Apache Software Foundation (ASF) under one   *
#  or more contributor license agreements.  See the NOTICE file *
#  distributed with this work for additional information        *
#  regarding copyright ownership.  The ASF licenses this file   *
#  to you under the Apache License, Version 2.0 (the            *
#  "License"); you may not use this file except in compliance   *
#  with the License.  You may obtain a copy of the License at   *
#                                                               *
#    http://www.apache.org/licenses/LICENSE-2.0                 *
#                                                               *
#  Unless required by applicable law or agreed to in writing,   *
#  software distributed under the License is distributed on an  *
#  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY       *
#  KIND, either express or implied.  See the License for the    *
#  specific language governing permissions and limitations      *
#  under the License.                                           *
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-scheduler
  namespace: "{{ .Values.global.services_namespace }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app-name: airflow-scheduler
  template:
    metadata:
      labels:
        app-name: airflow-scheduler
    spec:
      initContainers:
      - name: airflow-services-ready-check
        image: "{{ .Values.global.registry_url }}/service-checker:{{ .Values.global.kaapana_build_version  }}"
        imagePullPolicy: {{ .Values.global.pull_policy_images }}
        env:
        - name: WAIT
          value: "postgres,postgres-airflow,5432;prometheus,prometheus-service.{{  .Values.global.services_namespace  }}.svc,9090;statsd-service,airflow-statsd-service.{{  .Values.global.services_namespace  }}.svc,9102"
        - name: DELAY
          value: "5"
        - name: FILES_AND_FOLDERS_EXISTS
          value: "/kaapana/mounted/workflows/plugins/kaapana"
        volumeMounts:
        - name: airflow-plugins
          mountPath: /kaapana/mounted/workflows/plugins
      - name: init-airflow-db
        image: "{{ .Values.global.registry_url }}/airflow:{{ .Values.global.kaapana_build_version  }}"
        imagePullPolicy:  {{ .Values.global.pull_policy_images }}
        args: ["init"]
        resources:
          requests:
            memory: 250Mi
          limits:
            memory: 500Mi
        volumeMounts:
        - name: airflow-configmap
          mountPath: /kaapana/mounted/workflows/airflow.cfg
          subPath: airflow.cfg
        - name: airflow-webserver-config
          mountPath: /kaapana/mounted/workflows/webserver_config.py
          subPath: webserver_config.py
        - name: airflow-dags
          mountPath: /kaapana/mounted/workflows/dags
        - name: airflow-plugins
          mountPath: /kaapana/mounted/workflows/plugins
        env:
        - name: ADMIN_NAMESPACE
          value: "{{ .Values.global.admin_namespace }}"
        - name: AIRFLOW_HOME
          value: "/kaapana/mounted/workflows"
        - name: DEFAULT_REGISTRY
          value: "{{ .Values.global.registry_url }}"
        - name: EXTENSIONS_NAMESPACE
          value: "{{ .Values.global.extensions_namespace }}"
        - name: INSTANCE_NAME
          value: "{{ .Values.global.instance_name }}"
        - name: JOBS_NAMESPACE
          value: "{{ .Values.global.jobs_namespace }}"
        - name: KAAPANA_BUILD_VERSION
          value: "{{ .Values.global.kaapana_build_version }}"
        - name: PULL_POLICY_IMAGES
          value: "{{ .Values.global.pull_policy_images }}"
        - name: SERVICES_NAMESPACE
          value: "{{ .Values.global.services_namespace }}"
        - name: SQL_ALCHEMY_CONN
          value: postgresql+psycopg2://root:root@postgres-airflow:5432/airflow
      containers:
      - name: scheduler
        image: "{{ .Values.global.registry_url }}/airflow:{{ .Values.global.kaapana_build_version  }}"
        imagePullPolicy:  {{ .Values.global.pull_policy_images }}
        args: ["scheduler"]
        env:
        - name: ADMIN_NAMESPACE
          value: "{{ .Values.global.admin_namespace }}"
        - name: AIRFLOW__LOGGING__LOGGING_LEVEL
          value: "INFO"
        - name: AIRFLOW_HOME
          value: "/kaapana/mounted/workflows"
        - name: DATADIR
          value: "{{ .Values.global.fast_data_dir }}/workflows/data"
        - name: DEFAULT_REGISTRY
          value: "{{ .Values.global.registry_url }}"
        - name: EXTENSIONS_NAMESPACE
          value: "{{ .Values.global.extensions_namespace }}"
        - name: ENABLE_NFS
          value: "{{ .Values.global.enable_nfs }}"
        - name: GPU_SUPPORT
          value: "{{ .Values.global.gpu_support }}"
        - name: HOSTDOMAIN
          value: "{{ .Values.global.hostname }}"
        - name: HTTPS_PORT
          value: "{{ .Values.global.https_port }}"
        - name: INSTANCE_ID
          value: "{{ .Values.global.instance_id }}"
        - name: INSTANCE_NAME
          value: "{{ .Values.global.instance_name }}"
        - name: JOBS_NAMESPACE
          value: "{{ .Values.global.jobs_namespace }}"
        - name: KAAPANA_BUILD_VERSION
          value: "{{ .Values.global.kaapana_build_version }}"
        - name: MINIODIR
          value: "{{ .Values.global.slow_data_dir }}/minio"
        - name: MINIOUSER
          value: "{{ .Values.global.credentials_minio_username }}"
        - name: MINIOPASSWORD
          value: "{{ .Values.global.credentials_minio_password }}"
        - name: MODELDIR
          value: "{{ .Values.global.fast_data_dir }}/workflows/models"
        - name: PROXY
          value: "{{ .Values.global.http_proxy }}"
        - name: http_proxy
          value: {{ .Values.global.http_proxy }}
        - name: https_proxy
          value: {{ .Values.global.http_proxy }}
        - name: no_proxy
          value: ".svc,.svc.cluster,.svc.cluster.local"
        - name: PULL_POLICY_IMAGES
          value: "{{ .Values.global.pull_policy_images }}"
        - name: SERVICES_NAMESPACE
          value: "{{ .Values.global.services_namespace }}"
        - name: SQL_ALCHEMY_CONN
          value: postgresql+psycopg2://root:root@postgres-airflow:5432/airflow
        - name: SQLALCHEMY_SILENCE_UBER_WARNING
          value: "1"
        - name: OIDC_CLIENT_SECRET
          value: "{{ .Values.global.oidc_client_secret }}"
        - name: SYSTEM_USER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: system-user-password
              key: system-user-password
        resources:
          requests:
            memory: 3000Mi
          limits:
            memory: 15000Mi
        volumeMounts:
        - name: airflow-configmap
          mountPath: /kaapana/mounted/workflows/airflow.cfg
          subPath: airflow.cfg
        - name: airflow-webserver-config
          mountPath: /kaapana/mounted/workflows/webserver_config.py
          subPath: webserver_config.py
        - name: airflow-dags
          mountPath: /kaapana/mounted/workflows/dags
        - name: airflow-logs
          mountPath: /kaapana/mounted/workflows/logs
        - name: airflow-plugins
          mountPath: /kaapana/mounted/workflows/plugins
        - name: modeldata
          mountPath: /kaapana/mounted/workflows/models
        - name: ctpinput
          mountPath: /kaapana/mounted/ctpinput
        - name: workflowdata
          mountPath: /kaapana/mounted/workflows/data
        - name: dicomdir
          mountPath: /kaapana/mounted/pacsdata
        - name: uploads
          mountPath: /kaapana/app/uploads/
        - name: tmp
          mountPath: /kaapana/mounted/workflows/
        - name: tmpfs
          mountPath: /tmp
        securityContext:
          # readOnlyRootFilesystem: true localexecuter, runs multiproccesse an allocs mem
          allowPrivilegeEscalation: false
      volumes:
      - name: uploads
        persistentVolumeClaim:
          claimName: uploads-pv-claim
      - name: airflow-configmap
        configMap:
          name: airflow-configmap
      - name: airflow-webserver-config
        configMap:
          name: airflow-webserver-config
      - name: airflow-statsd-config
        configMap:
          name: airflow-statsd-config
      - name: airflow-dags
        persistentVolumeClaim:
          claimName: dags-pv-claim
      - name: airflow-logs
        persistentVolumeClaim:
          claimName: af-logs-pv-claim
      - name: airflow-plugins
        persistentVolumeClaim:
          claimName: af-plugins-pv-claim
      - name: modeldata
        persistentVolumeClaim:
          claimName: models-pv-claim
      - name: ctpinput
        persistentVolumeClaim:
          claimName: ctp-data-pv-claim
      - name: workflowdata
        persistentVolumeClaim:
          claimName: af-data-pv-claim
      - name: dicomdir
        persistentVolumeClaim:
          claimName: dcm4chee-dicom-pv-claim
      - name: tmp 
        emptyDir: {}
      - name: tmpfs
        emptyDir: {}
      serviceAccountName: kaapana-kube-admin
      priorityClassName: kaapana-high-priority
      imagePullSecrets:
      - name: registry-secret
---
