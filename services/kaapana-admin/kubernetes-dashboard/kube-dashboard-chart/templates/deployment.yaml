

apiVersion: v1
kind: Secret
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard-csrf
  namespace: "{{  .Values.global.admin_namespace  }}"
type: Opaque
data:
  csrf: ""

---

kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: "{{  .Values.global.admin_namespace  }}"
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app-name: kubernetes-dashboard
  template:
    metadata:
      labels:
        app-name: kubernetes-dashboard
    spec:
      containers:
        - name: kubernetes-dashboard
          image: "{{ .Values.global.registry_url }}/kube-dashboard:{{ .Values.global.kaapana_build_version  }}"
          imagePullPolicy:  {{ .Values.global.pull_policy_images }}
          ports:
            - containerPort: 9090
              protocol: TCP
          args:
            - --namespace={{  .Values.global.admin_namespace  }}
            - --enable-skip-login
            - --disable-settings-authorizer
            - --insecure-port=9090
            - --insecure-bind-address=0.0.0.0
            # - --enable-insecure-login
          resources:
            requests:
              memory: 50Mi
            limits:
              memory: 100Mi
          volumeMounts:
            # Create on-disk volume to store exec logs
            - mountPath: /tmp
              name: tmp-volume
          livenessProbe:
            httpGet:
              path: /
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 1001
            runAsGroup: 2001
      volumes:
        - name: tmp-volume
          emptyDir: {}
      serviceAccountName: kaapana-kube-admin
      imagePullSecrets:
      - name: registry-secret

---
