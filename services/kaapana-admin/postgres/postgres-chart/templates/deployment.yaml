---
apiVersion: apps/v1
kind: Deployment
metadata:
  # This name uniquely identifies the Deployment
  name: {{ .Values.appName | default .Release.Name }}-database
  namespace: "{{ ternary .Values.global.admin_namespace .Values.global.services_namespace .Values.admin }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.appName | default .Release.Name }}
      app.kubernetes.io/component: database
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.appName | default .Release.Name }}
        app.kubernetes.io/component: database
    spec:
      securityContext:
        runAsUser: 70
      initContainers:
      - name: set-mount-permissions
        image: "{{ .Values.global.registry_url }}/busybox:{{ .Values.global.kaapana_build_version  }}"
        securityContext:
          runAsUser: 0
        command: ["chown", "-vR" , "70:70", "/var/lib/postgresql", "/var/run/postgresql"]
        volumeMounts:
          - name: postgres-data
            mountPath: "/var/lib/postgresql"
          - name:  unix-socket-dir
            mountPath: /var/run/postgresql
      containers:
      - name: postgres
        image: "{{ .Values.global.registry_url }}/postgres-17.2-alpine:{{ .Values.global.kaapana_build_version  }}"
        imagePullPolicy:  {{ .Values.global.pull_policy_images }}
        env:
        - name: POSTGRES_USER
          value: {{ .Values.postgres_user }}
        - name: POSTGRES_PASSWORD
          value: {{ .Values.postgres_password }}
        - name: POSTGRES_DB
          value: {{ .Values.postgres_db }}
        ports:
          - containerPort: 5432
        resources:
          limits:
            memory: "5Gi"
          requests:
            memory: "100Mi"
        volumeMounts:
          - name: postgres-data
            mountPath: "/var/lib/postgresql/data"
          - name: unix-socket-dir
            mountPath: /var/run/postgresql
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: {{ .Values.appName | default .Release.Name }}-pv-claim
      - name: unix-socket-dir
        emptyDir: {}
      priorityClassName: kaapana-high-priority
      imagePullSecrets:
        - name: registry-secret