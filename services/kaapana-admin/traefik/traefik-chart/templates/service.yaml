apiVersion: v1
kind: Service
metadata:
  name: "traefik-{{  .Values.global.instance_uid | default 0 }}"
  namespace: "{{  .Values.global.helm_namespace  }}"
spec:
  type: ClusterIP
  ports:
    - protocol: TCP
      name: websecure
      port: {{ .Values.global.https_port }}
    - protocol: TCP
      name: admin
      port: 8080
  selector:
    app: traefik
---
apiVersion: v1
kind: Service
metadata:
  name: traefik-http
  namespace: "{{  .Values.global.helm_namespace  }}"
spec:
  type: NodePort
  ports:
    - protocol: TCP
      name: web
      port: {{ .Values.global.http_port }}
      nodePort: {{ .Values.global.http_port }}
  selector:
    app: traefik
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: traefik-strip-prefix
  namespace: "{{  .Values.global.helm_namespace  }}"
spec:
  stripPrefix:
    prefixes:
    - /traefik
    forceSlash: true
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: errorpages
  namespace: "{{  .Values.global.helm_namespace  }}"
spec:
  errors:
    status:
      - 400-411
    query: /{status}
    service:
      name: error-pages-service
      namespace: "{{  .Values.global.admin_namespace  }}"
      port: 5000
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: traefik-redirect
  namespace: "{{  .Values.global.helm_namespace  }}"
spec:
  redirectRegex:
    regex: ^.*/traefik$
    replacement: /traefik/dashboard/#/
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: remove-auth-headers
  namespace: "{{  .Values.global.helm_namespace  }}"
spec:
  headers:
    customRequestHeaders:
      X-Auth-Token: ""
      X-Auth-Username: ""
      X-Auth-Userid: ""
      X-Auth-Email: ""
      X-Auth-Subject: ""
      Authorization: ""
      kc-state: ""
      cookie: ""
---
apiVersion: networking.k8s.io/v1 
kind: Ingress
metadata:
  name: traefik-web-api-ip
  namespace: "{{  .Values.global.helm_namespace  }}"
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    
    kubernetes.io/ingress.global-static-ip-name: "kubernetes-ingress"
spec:
  rules:
  - host:
    http:
      paths:
      - path: /api
        pathType: ImplementationSpecific
        backend:
          service:
            name: "traefik-{{  .Values.global.instance_uid | default 0 }}"
            port:
              name: admin
      - path: /health
        pathType: ImplementationSpecific
        backend:
          service:
            name: "traefik-{{  .Values.global.instance_uid | default 0 }}"
            port:
              name: admin
---
apiVersion: networking.k8s.io/v1 
kind: Ingress
metadata:
  name: traefik-ingress
  namespace: "{{  .Values.global.helm_namespace  }}"
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.middlewares: {{  .Values.global.services_namespace  }}-auth-check@kubernetescrd,{{  .Values.global.helm_namespace  }}-traefik-redirect@kubernetescrd,{{  .Values.global.helm_namespace  }}-traefik-strip-prefix@kubernetescrd
    kubernetes.io/ingress.global-static-ip-name: "kubernetes-ingress"
spec:
  rules:
  - host: 
    http:
      paths:
      - path: /traefik
        pathType: ImplementationSpecific
        backend:
          service:
            name: "traefik-{{  .Values.global.instance_uid | default 0 }}"
            port:
              name: admin
---
