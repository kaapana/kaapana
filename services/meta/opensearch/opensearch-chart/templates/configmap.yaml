---
apiVersion: v1
kind: ConfigMap
metadata:
  name: os-config
  namespace: "{{ .Values.global.services_namespace }}"
data:
  opensearch.yml: |+
    plugins.security.disabled: "false"
    plugins.security.allow_default_init_securityindex: true
    plugins.security.authcz.admin_dn: 
      - 'CN=A,OU=UNIT,O=ORG,L=TORONTO,ST=ONTARIO,C=CA'
    plugins.security.nodes_dn: 
      - 'CN=node1.dns.a-record,OU=UNIT,O=ORG,L=TORONTO,ST=ONTARIO,C=CA'

    plugins.security.ssl.transport.pemcert_filepath: node1.pem  ##ssl/tls.crt
    plugins.security.ssl.transport.pemkey_filepath: node1-key.pem ##ssl/tls.key
    plugins.security.ssl.transport.pemtrustedcas_filepath: root-ca.pem
    plugins.security.ssl.transport.enforce_hostname_verification: "false"

    plugins.security.ssl.http.enabled : "true"
    plugins.security.ssl.http.pemcert_filepath: node1.pem
    plugins.security.ssl.http.pemkey_filepath: node1-key.pem
    plugins.security.ssl.http.pemtrustedcas_filepath: root-ca.pem
  internal_users.yml: |+
    ---
    # This is the internal user database
    # The hash value is a bcrypt hash and can be generated with plugin/tools/hash.sh

    _meta:
      type: "internalusers"
      config_version: 2

    # Define your internal users here
    new-user:
      hash: "$2y$12$88IFVl6IfIwCFh5aQYfOmuXVL9j2hz/GusQb35o.4sdTDAEMTOD.K"
      reserved: false
      hidden: false
      opensearch_security_roles:
      - "specify-some-security-role-here"
      backend_roles:
      - "specify-some-backend-role-here"
      attributes:
        attribute1: "value1"
      static: false

    ## Demo users

    admin:
      hash: "$2a$12$VcCDgh2NDk07JGN0rjGbM.Ad41qVR/YFJcgHp0UGns5JDymv..TOG"
      reserved: true
      backend_roles:
      - "admin"
      description: "Demo admin user"

    kibanaserver:
      hash: "$2a$12$4AcgAt3xwOWadA5s5blL6ev39OXDNhmOesEoo33eZtrq2N0YrU3H."
      reserved: true
      description: "Demo user for the OpenSearch Dashboards server"

    kibanaro:
      hash: "$2a$12$JJSXNfTowz7Uu5ttXfeYpeYE0arACvcwlPBStB1F.MI7f0U9Z4DGC"
      reserved: false
      backend_roles:
      - "kibanauser"
      - "readall"
      attributes:
        attribute1: "value1"
        attribute2: "value2"
        attribute3: "value3"
      description: "Demo read-only user for OpenSearch dashboards"

    logstash:
      hash: "$2a$12$u1ShR4l4uBS3Uv59Pa2y5.1uQuZBrZtmNfqB3iM/.jL0XoV9sghS2"
      reserved: false
      backend_roles:
      - "logstash"
      description: "Demo logstash user"

    readall:
      hash: "$2a$12$ae4ycwzwvLtZxwZ82RmiEunBbIPiAmGZduBAjKN0TXdwQFtCwARz2"
      reserved: false
      backend_roles:
      - "readall"
      description: "Demo readall user"

    snapshotrestore:
      hash: "$2y$12$DpwmetHKwgYnorbgdvORCenv4NAK8cPUg8AI6pxLCuWf/ALc0.v7W"
      reserved: false
      backend_roles:
      - "snapshotrestore"
      description: "Demo snapshotrestore user"
  roles_mapping.yml: |+
    ---
    manage_snapshots:
      reserved: true
      hidden: false
      backend_roles:
      - "snapshotrestore"
      hosts: []
      users: []
      and_backend_roles: []
    logstash:
      reserved: false
      hidden: false
      backend_roles:
      - "logstash"
      hosts: []
      users: []
      and_backend_roles: []
    own_index:
      reserved: false
      hidden: false
      backend_roles: []
      hosts: []
      users:
      - "*"
      and_backend_roles: []
      description: "Allow full access to an index named like the username"
    kibana_user:
      reserved: false
      hidden: false
      backend_roles:
      - "kibanauser"
      hosts: []
      users: []
      and_backend_roles: []
      description: "Maps kibanauser to kibana_user"
    complex-role:
      reserved: false
      hidden: false
      backend_roles:
      - "ldap-analyst"
      hosts: []
      users:
      - "new-user"
      and_backend_roles: []
    _meta:
      type: "rolesmapping"
      config_version: 2
    all_access:
      reserved: true
      hidden: false
      backend_roles:
      - "admin"
      hosts: []
      users: []
      and_backend_roles: []
      description: "Maps admin to all_access"
    readall:
      reserved: true
      hidden: false
      backend_roles:
      - "readall"
      hosts: []
      users: []
      and_backend_roles: []
    kibana_server:
      reserved: true
      hidden: false
      backend_roles: []
      hosts: []
      users:
      - "kibanaserver"
      and_backend_roles: []
  tenants.yml: |+
    ---
    _meta:
      type: "tenants"
      config_version: 2
    admin_tenant:
      reserved: false
      description: "Demo tenant for admin user"
  roles.yml: |+
    ---
    complex-role:
      reserved: false
      hidden: false
      cluster_permissions:
      - "read"
      - "cluster:monitor/nodes/stats"
      - "cluster:monitor/task/get"
      index_permissions:
      - index_patterns:
        - "opensearch_dashboards_sample_data_*"
        dls: "{\"match\": {\"FlightDelay\": true}}"
        fls:
        - "~FlightNum"
        masked_fields:
        - "Carrier"
        allowed_actions:
        - "read"
      tenant_permissions:
      - tenant_patterns:
        - "analyst_*"
        allowed_actions:
        - "kibana_all_write"
      static: false
    _meta:
      type: "roles"
      config_version: 2
  action_groups.yml: |+
    ---
    my-action-group:
      reserved: false
      hidden: false
      allowed_actions:
      - "indices:data/write/index*"
      - "indices:data/write/update*"
      - "indices:admin/mapping/put"
      - "indices:data/write/bulk*"
      - "read"
      - "write"
      static: false
    _meta:
      type: "actiongroups"
      config_version: 2
  config.yml: |+
    ---
    _meta:
      type: "config"
      config_version: 2
    config:
      dynamic:
        authc:
          openid_auth_domain:
            http_enabled: true
            transport_enabled: true
            order: 1
            http_authenticator:
              type: openid
              challenge: false
              config:
                openid_connect_idp:
                  enable_ssl: false
                  verify_hostnames: false
                  # pemtrustedcas_filepath: /usr/share/opensearch/config/root-ca.pem
                subject_key: preferred_username
                roles_key: roles
                openid_connect_url: http://keycloak-external-service.{{  .Values.global.admin_namespace  }}.svc:80/auth/realms/kaapana/.well-known/openid-configuration
            authentication_backend:
              type: noop
          basic_internal_auth_domain:
            description: "Authenticate via HTTP Basic against internal users database"
            http_enabled: true
            transport_enabled: true
            order: 2
            http_authenticator:
              type: basic
              challenge: false
            authentication_backend:
              type: intern
          
              