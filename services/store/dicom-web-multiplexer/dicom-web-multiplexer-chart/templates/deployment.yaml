apiVersion: apps/v1
kind: Deployment
metadata:
  name: dicom-web-multiplexer
  namespace: "{{ .Values.global.services_namespace }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app-name: dicom-web-multiplexer
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app-name: dicom-web-multiplexer
    spec:
      containers:
        - name: dicom-web-multiplexer
          image: "{{ .Values.global.registry_url }}/dicom-web-multiplexer:{{ .Values.global.kaapana_build_version }}"
          imagePullPolicy: "{{ .Values.global.pull_policy_images }}"
          env:
            - name: PORT
              value: "8080"
            - name: WORKERS
              value: "4"
            - name: DICOMWEB_BASE_URL
              value: "http://dicom-web-filter-service.{{ .Values.global.services_namespace }}.svc:8080/dicom-web-filter"
            - name: DICOMWEB_BASE_URL_WADO_URI
              value: "http://dicom-web-filter-service.{{ .Values.global.services_namespace }}.svc:8080/dicom-web-filter/wado-uri"
          ports:
            - containerPort: 8080
          resources:
            limits:
              memory: "5Gi"
            requests:
              memory: "256Mi"
          volumeMounts:
            {{- if .Values.global.dev_files }}
            - name: dicom-web-multiplexer-dev
              mountPath: /app
            {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: {{ if .Values.global.dev_files }}false{{ else }}true{{ end }}
      imagePullSecrets:
        - name: registry-secret
      volumes:
        {{- if .Values.global.dev_files }}
        - name: dicom-web-multiplexer-dev
          persistentVolumeClaim:
            claimName: dicom-web-multiplexer-dev-pv-claim
        {{- end }}
