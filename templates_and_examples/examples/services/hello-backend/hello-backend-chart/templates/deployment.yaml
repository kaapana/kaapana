---
apiVersion: apps/v1
kind: Deployment
metadata:
  # This name uniquely identifies the Deployment
  name: hello-backend
  namespace: "{{ .Values.global.services_namespace }}"
  #namespace: "{{ .Values.global.services_namespace }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app-name: hello-backend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app-name: hello-backend
    spec:
      initContainers:
      - name: init
        image: "{{ .Values.global.registry_url }}/service-checker:{{ .Values.global.kaapana_build_version  }}"
        imagePullPolicy:  {{ .Values.global.pull_policy_images }}
        env:
          - name: WAIT
            value: "hello-postgres,hello-postgres-service.{{  .Values.global.services_namespace  }}.svc,5432"
          - name: DELAY
            value: "1"
          - name: TIMEOUT
            value: "10"
      containers:
      - name: hello-backend
        image: "{{ .Values.global.registry_url }}/hello-backend:{{ .Values.global.kaapana_build_version  }}"
        imagePullPolicy: Always
        #imagePullPolicy:  {{ .Values.global.pull_policy_images }}
        # command: ["tail"]
        # args: ["-f", "/dev/null"] 
        env: # Environment variables
        - name: SECRET_KEY
          value: kaapana-secret
        - name: HELLO_WORLD_USER
          value: kaapana-user
          #value: {{ .Values.hello_world_user }}
        - name: APPLICATION_ROOT
          value: "/hello-backend"
        - name: DATABASE_URL
          value: postgresql://someuser:somepassword@hello-postgres-service.{{  .Values.global.services_namespace  }}.svc:5432
        ports: # Port(s) on which your application runs
          - containerPort: 5000
        resources:
          requests:
            memory: 200Mi
          limits:
            memory: 500Mi
      imagePullSecrets:
        - name: registry-secret